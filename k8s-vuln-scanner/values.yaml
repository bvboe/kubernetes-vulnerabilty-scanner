clusterName: "Kubernetes Cluster"
podScanner:
  enabled: true
  image:
    repository: "bjornvb/k8s-pod-scanner"
    pullPolicy: "IfNotPresent"
    tag: "0.1.45"
  #Settings determining how the scanner integrates with container manager
  scannerIntegration:
    #Comma-separated list of potential places the docer socket could be on the scanner container.
    potentialDockerSocketLocations: "/host/run/docker.sock"
    #Comma-separated list of potential directories where ContainerD is storing its image snapshots
    potentialContainerDSnapshotLocations: "/host/var/lib/rancher/k3s/agent/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots,/host/var/snap/microk8s/common/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots,/host/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots"
vulnerabilityCoordinator:
  enabled: true
  externalStorage: true
  # Refresh the cache to ensure data consistency every 30 minutes
  cacheRefreshMinuteInterval: 30
  # How often to check if the vulnerability database changes, which will trigger a rescan of all images and nodes
  checkRemoteScannerMetadataInterval: 30
  image:
    repository: "bjornvb/k8s-scanner-vulnerability-coordinator"
    pullPolicy: "IfNotPresent"
    tag: "0.1.45"
webFrontend:
  enabled: true
  # How is the web frontend exposed to the world?
  # ClusterIP, NodePort or LoadBalancer
  serviceType: ClusterIP
  image:
    repository: "bjornvb/k8s-scanner-web-frontend"
    pullPolicy: "IfNotPresent"
    tag: "0.1.45"
