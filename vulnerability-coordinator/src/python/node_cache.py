import threading

class NodeCache:
    cache = set()
    lock = threading.Lock()

    def add(self, node_name):
        with self.lock:
            self.cache.add(node_name)

    def discard(self, node_name):
        with self.lock:
            self.cache.discard(node_name)

    def get_copy(self):
        with self.lock:
            return self.cache.copy()
    
    def replace_cache(self, new_cache):
        with self.lock:
            self.cache.clear()
            self.cache.update(new_cache)

    def contains(self, node_name):
        with self.lock:
            return node_name in self.cache