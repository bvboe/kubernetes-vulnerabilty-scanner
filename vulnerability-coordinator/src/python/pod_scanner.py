import queue
import threading
from file_manager import sbom_exists, store_sbom, add_to_sbom_log, add_to_sbom_error_log, call_process_sbom_script
import os
from kubernetes_adapter import get_scanner_ip
import traceback
import requests

SCAN_QUEUE = queue.Queue()

def init_pod_scanner():
    print("init_pod_scanner()")
    pod_scanner_thread = threading.Thread(target=scanner_worker)
    pod_scanner_thread.start()


def scan_image(node_name, container_id, image, image_id):
    print(f"scan_image {image}")
    scan = {
        "node_name": node_name, 
        "container_id": container_id, 
        "image": image, 
        "image_id": image_id
    }
    SCAN_QUEUE.put(scan)

def scanner_worker():
    print("scanner_worker()")
    while True:
        try:
            scan_task = SCAN_QUEUE.get()
            #print(scan_task)
            do_process_scan_task(scan_task)
            SCAN_QUEUE.task_done()
        except queue.Empty:
            print("Queue is empty, worker is waiting for tasks.")
        except Exception as e:
            print(f"Worker encountered an exception: {e}")
            traceback.print_exc()

def do_process_scan_task(scan_task):
    print("do_process_scan_task()")
    node_name = scan_task['node_name']
    container_id = scan_task['container_id']
    image = scan_task['image']
    image_id = scan_task['image_id']
    if sbom_exists(image_id) == False:
        print("No sbom, load one!!!!")
        sbom = load_sbom(node_name, container_id, image, image_id)
        if sbom:
            print(f"do_process_scan_task - Got SBOM for {image}, store it")
            store_sbom(image_id, sbom)
            add_to_sbom_log(image, image_id)
            print(f"do_process_scan_task - do post processing and scanning for {image}")
            call_process_sbom_script(image_id)
        else:
            print(f"do_process_scan_task - No SBOM for {image}, ignoring")
            add_to_sbom_error_log(node_name, image, image_id)

    
def load_sbom(node_name, container_id, image, image_id):
    print("load_sbom()")
    scanner_ip = get_scanner_ip(node_name)
    print(f"scanner ip: {scanner_ip}")
    if scanner_ip is None:
        # Returning nothing if we have nowhere to call
        return None
    
    # Call SBOM Service
    url = f"http://{scanner_ip}:8080/sbom"
    params = {"image_id": image_id, "image": image, "container_id": container_id}

    try:
        # Send a GET request to the service
        response = requests.get(url, params=params)
        
        # Check if the request was successful
        if response.status_code == 200:
            # Parse the JSON response
            data = response.json()
            if data['result'] == "success":
                print(f"load_sbom result: successful for {image}")
                return data['sbom']
            else:
                print(f"load_sbom result: failed for {image}")
                return None
        else:
            print(f"Failed with status code: {response.status_code}")
            return None
    except requests.exceptions.RequestException as e:
        # Handle any errors that occur during the request
        print(f"Request failed: {e}")
        return None


